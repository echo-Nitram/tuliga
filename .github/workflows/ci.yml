name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Run flake8
        run: flake8 backend --max-line-length=120

  backend-tests:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:///:memory:
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Run tests
        run: pytest backend --cov=backend --cov-report=xml
      - uses: actions/upload-artifact@v3
        with:
          name: backend-coverage
          path: coverage.xml

  frontend-tests:
    runs-on: ubuntu-latest
    if: hashFiles('frontend/**/package.json') != ''
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      - name: Run tests
        working-directory: frontend
        run: npm test -- --coverage
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-coverage
          path: frontend/coverage

  docker:
    runs-on: ubuntu-latest
    needs: [lint, backend-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t tuliga .
      - name: Deploy
        run: echo 'Deploy step - implement as needed'
